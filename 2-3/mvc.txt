問題URL
http://qiita.com/geshi/private/126a50ea661841a69f32

1.MVCのメリット
自己認識：
model、view、controller役割ごとにわけることで、プログラムそれぞれが他のプログラムへの依存度を低くすることができる
見た目の変更、ロジックの変更など変更に強い
RESTfullなアプリケーションに近づけやすい
責任の所在をはっきりさせることができ、障害の修正も比較的容易である
開発者個人でWEBアプリすべての要素に必ずしも精通している必要はない（精通していうるにこしたことはない）

調査結果：
機能ごとの分離が明確になることで、開発の分業が可能になる
専門家を配置し、クオリティを上げられる
再利用しやすい
疎結合（独立性、依存度が低いと同じ）
ユニットテストが書きやすい


2.別ファイル参照

3.viewにビジネスロジックを書くべきでない理由
viewの管轄する見た目は、ビジネスロジックと比較して高頻度で変更が生じ、
その変更に対応するコストが非常に大きくなるため。
javascriptを含むことも考えると冗長になってしまうため。

